#include <windows.h>
#include <GL\freeglut.h>
#include <cmath>
#include <stdlib.h>
int color=1;


void myInit() {
    glClearColor(0.0,0.0,0.0,1.0);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-100,100,-100,100,-1,1);
    glMatrixMode(GL_MODELVIEW);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
    glColor3f(0.0,1.0,0.0);
    glVertex2f(-70,-70);
    glVertex2f(-70,70);
    glVertex2f(70,70);
    glVertex2f(70,-70);
    glEnd();
    glFlush();
}
void myfunc(unsigned char key,int x,int y) {
    glClear(GL_COLOR_BUFFER_BIT);
    if(key=='r'){
        switch (color){
            case 1:
                color=2;
    glBegin(GL_QUADS);
    glColor3f(1.0,0.0,0.0);
            glVertex2f(-70,-70);
            glVertex2f(-70,70);
            glVertex2f(70,70);
            glVertex2f(70,-70);
    glEnd();
    glFlush();
    break;
            case 2:
                color=3;
            glBegin(GL_QUADS);
            glColor3f(0.0,1.0,0.0);
            glVertex2f(-70,-70);
            glVertex2f(-70,70);
            glVertex2f(70,70);
            glVertex2f(70,-70);
            glEnd();
            glFlush();
            break;

            case 3:
            color=1;
                glColor3f(0.0,0.0,1.0);
            glBegin(GL_QUADS);
            glVertex2f(-70,-70);
            glVertex2f(-70,70);
            glVertex2f(70,70);
            glVertex2f(70,-70);
            glEnd();
            glFlush();
            break;}}
    else if(key==27){
        exit(0);
    }

}


int main(int argc, char ** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowSize(500,500);
    glutInitWindowPosition(100,100);

    glutCreateWindow("finally");
    glutDisplayFunc(display);
    glutKeyboardFunc(myfunc);
    myInit();
    glutMainLoop();

    return 0;
}